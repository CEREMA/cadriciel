---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    app: {{ .Release.Name }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      annotations:
        releaseTime: {{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC"| quote }}
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              value: {{ .Values.app.db.database }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.app.db.password }}
            - name: POSTGRES_USER
              value: {{ .Values.app.db.user }}
          volumeMounts:
            - name: postgres
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: vol-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-{{ .Values.environment }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}-{{ .Values.environment }}
  replicas: 1
  template:
    metadata:
      annotations:
        releaseTime: {{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC"| quote }}
      labels:
        app: {{ .Values.name }}-{{ .Values.environment }}
    spec:
      containers:
        - name: sc
          env:    
            - name: API_URI
              value: {{ .Values.url }}
            - name: API_JWT
              value: {{ .Values.app.jwt }}
            - name: SECRET
              value: {{ .Values.app.secret }}
            - name: API_TIMEOUT
              value: "15000"
            - name: DEFAULT_ROLE
              value: {{ .Values.app.defaultRole }}
            - name: DB_URI
              value: postgres://{{ .Values.app.db.user }}:{{ .Values.app.db.password }}@db/{{ .Values.app.db.database }}
            - name: CLIENT_production
              value: "true"
            - name: CLIENT_clientId
              value: {{ .Values.app.clientId }}
            - name: CLIENT_orionUrl
              value: {{ .Values.app.orionUrl }}
            - name: CLIENT_redirectUri
              value: {{ .Values.url }}/login
            - name: CLIENT_allowedUrls
              value: '["{{ .Values.url }}/api","{{ .Values.url }}/db"]'
            - name: CLIENT_serverDbUrl
              value: {{ .Values.url }}/db
            - name: CLIENT_serverApiUrl
              value: {{ .Values.url }}/api
            - name: CLIENT_deconnexionUri
              value: {{ .Values.url }}/deconnexion
          image: {{ .Values.registry }}/{{ .Values.project }}:{{ default .Chart.AppVersion .Values.version }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          command: ["yarn", "start"]
